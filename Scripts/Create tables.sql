CREATE TABLE IF NOT EXISTS models (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	brand varchar (64),
	engine_type varchar(64),
	engine_horsepower int,
	drive varchar(64)
);

CREATE TABLE IF NOT EXISTS cars (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	car_plates int NOT NULL,
	model_id int,
	year int,
	condition varchar(64),
	days_to_maintenance int,
	rent_price int,
	
	FOREIGN KEY (model_id) REFERENCES models(id)
);

CREATE TABLE IF NOT EXISTS clients (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	first_name varchar(64),
	last_name varchar(64),
	birth_date date,
	gender varchar(64),
	level varchar(64),
	phone varchar(64),
	email varchar(64),
	balance int
);

CREATE TABLE IF NOT EXISTS maps (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	coverage varchar(64),
	total_length int
);

CREATE TABLE IF NOT EXISTS configs (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	map_id int,
	record_id int,
	length int,
	
	FOREIGN KEY (map_id) REFERENCES maps(id)
);

CREATE TABLE IF NOT EXISTS races (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	config_id int,
	date date,
	time_started time,
	time_finished time,
	
	FOREIGN KEY (config_id) REFERENCES configs(id)
);

CREATE TABLE IF NOT EXISTS results (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	race_id int,
	client_id int,
	car_id int,
	time int,
	points int,
	difference_to_PR int,
	
	FOREIGN KEY (race_id) REFERENCES races(id),
	FOREIGN KEY (client_id) REFERENCES clients(id),
	FOREIGN KEY (car_id) REFERENCES cars(id)
);

CREATE TABLE IF NOT EXISTS records (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	result_id int,
	type varchar(64),
	
	FOREIGN KEY (result_id) REFERENCES results(id)
);

CREATE TABLE IF NOT EXISTS accidents (
	id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	race_id int,
	client_id int,
	car_id int,
	type varchar(64),
	
	FOREIGN KEY (race_id) REFERENCES races(id),
	FOREIGN KEY (client_id) REFERENCES clients(id),
	FOREIGN KEY (car_id) REFERENCES cars(id)
);
